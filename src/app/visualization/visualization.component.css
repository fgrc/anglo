.visualizationMainWrapper {
  position: relative;
}

.toggleSidebarBtn{
    background: #d34b5f;
    box-shadow: 2px 2px 3px 0px rgba(160, 174, 201, 0.3);
    color: #fff;
    cursor: pointer;
    font-size: small;
    letter-spacing: -0.025em;
    padding: 3px 10px 1px;
    position: absolute;
    left: 0;
    top: -10px;
    z-index: 10;
}
.toggleSidebarBtn:before {
    background-color: inherit;
    box-shadow: inherit;
    content: "";
    height: 100%;
    transform: skewX(-25deg);
    position: absolute;
    right: 0;
    top: 0;
    width: 20px;
    z-index: -1;
}
.toggleSidebarBtn:after {
    background-color: inherit;
    content: "";
    height: 100%;
    transform: skewX(25deg);
    position: absolute;
    right: 0;
    bottom: 0;
    width: 20px;
    z-index: -1;
}

.toggleSidebarBtn:hover {
  background-color: #bb394c;

}
.toggleLegendBtn {
  border: 1px solid;
  border-radius: 0.25em;
  color: #084e8a;
  cursor: pointer;
  padding: 2px 10px;
  position: absolute;
  right: 170px;
  top: 8px;
  z-index: 10;
}
legend {
  max-width: 400px;
}
@media (min-width: 576px) {
  .main-container {
    display: flex;
    justify-content: space-between;
    padding: 0 15px;
  }
  .sidebar-container {
    /* flex: 1 0 auto; if this is used, siblings can't adapt to the width in case of the element width changing (animation hide sidebar)*/
    max-width: 300px;
    /* this container is handled with bootstrap 4 col, meaning it adapts to the content width */
    /* width: 300px; same as above with flex, if you want the width to change you should operate only with childerns widths */
    padding-left: 0;

  }
  .content-container {
    /*flex: 3 0 auto;  animations breaks with "width" and "flex"
    width: auto;*/
    margin: 0 auto;
    padding: 0;
  }
}
