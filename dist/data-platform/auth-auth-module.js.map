{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.scss","webpack:///./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\n\nconst routes:Routes =[\n  {path:'login',component:LoginComponent, data: { state: 'login' }},\n  {path:'signup',component:SignupComponent, data: { state: 'signup' }}\n]\n\n@NgModule({\n  imports:[\n    RouterModule.forChild(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AuthRoutingModule{\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule} from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngulaMaterialModule } from \"../angular-material.module\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\n\n@NgModule({\n  declarations:[\n    LoginComponent,\n    SignupComponent\n  ],\n  imports:[\n    CommonModule,\n    FormsModule,\n    AngulaMaterialModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n    <form *ngIf=\\\"!isLoading\\\" #loginForm=\\\"ngForm\\\">\\n        <mat-form-field>\\n            <input\\n              matInput placeholder=\\\"E-mail\\\" type=\\\"email\\\" name='email' ngModel #emailInput=\\\"ngModel\\\" required email>\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">\\n                please enter a valid email address\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel #passwordInput=\\\"ngModel\\\" required>\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\n                please enter a post content\\n            </mat-error>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"!isLoading\\\" type='submit' [routerLink]=\\\"['/authenticated-navigation']\\\" >Login</button>\\n    </form>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  border-radius: 0 1em;\\n  margin: auto;\\n  max-width: 450px; }\\n\\n.mat-card:not([class*=mat-elevation-z]) {\\n  box-shadow: 2px 2px 3px 0px rgba(160, 174, 201, 0.3); }\\n\\nmat-form-field,\\ntextarea {\\n  width: 100%; }\\n\\nmat-spinner {\\n  margin: auto; }\\n\\n.mat-raised-button:not([class*=mat-elevation-z]) {\\n  box-shadow: none; }\\n\\n.mat-raised-button {\\n  background-color: #084E8A;\\n  border-radius: .2rem;\\n  cursor: pointer;\\n  margin-top: 10px;\\n  width: 100%;\\n  padding: .25em;\\n  font-size: 1rem; }\\n\\n.mat-raised-button:hover {\\n  background-color: #023969; }\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  templateUrl:'./login.component.html',\n  styleUrls:['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  isLoading=false;\n  private authStatusSub:Subscription;\n\n  constructor(public authService:AuthService){}\n\n  ngOnInit(){\n    this.authStatusSub=this.authService.getAuthStatusListener().subscribe(\n      authStatus=>{\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form:NgForm){\n    if(form.invalid){\n      return;\n    }\n    this.isLoading=true;\n    this.authService.login(form.value.email,form.value.password);\n  }\n\n  ngOnDestroy(){\n    this.authStatusSub.unsubscribe();\n  }\n}\n","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n    <form *ngIf=\\\"!isLoading\\\" #signupForm=\\\"ngForm\\\" (submit)=\\\"onSignup(signupForm)\\\">\\n        <mat-form-field>\\n            <input\\n              matInput placeholder=\\\"E-mail\\\" type=\\\"email\\\" name='email' ngModel #emailInput=\\\"ngModel\\\" required email>\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">\\n                please enter a valid email address\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel #passwordInput=\\\"ngModel\\\" required>\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\n                please enter a post content\\n            </mat-error>\\n        </mat-form-field>\\n        <button mat-raised-button *ngIf=\\\"!isLoading\\\" color=\\\"accent\\\" type='submit'>Signup</button>\\n    </form>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  margin: auto; }\\n\\nmat-form-field,\\ntextarea {\\n  width: 100%; }\\n\\nmat-spinner {\\n  margin: auto; }\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  templateUrl:'./signup.component.html',\n  styleUrls:['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit,OnDestroy{\n  isLoading=false;\n  private authStatusSub:Subscription;\n\n  constructor(public authService:AuthService){}\n\n  ngOnInit(){\n    this.authStatusSub=this.authService.getAuthStatusListener().subscribe(\n      authStatus=>{\n        this.isLoading = false;\n      });\n  }\n  onSignup(form:NgForm){\n    console.log(form.value);\n    if(form.invalid){\n      return;\n    }\n    this.isLoading=true;\n    this.authService.createUser(form.value.email,form.value.password);\n  }\n  ngOnDestroy(){\n    this.authStatusSub.unsubscribe();\n  }\n}\n"],"sourceRoot":""}